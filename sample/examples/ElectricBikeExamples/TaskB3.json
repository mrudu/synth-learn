{
  "assumptions": [
    "G((!brake & X(brake)) -> (X(X(brake)) & X(X(X(brake)))))", 
    "G((brake & X(!brake)) -> (X(X(!brake)) & X(X(X(!brake)))))"
  ], 
  "guarantees": ["G(!(assist & brakeregenerate))", 
    "G(!(assist & idle))", "G(!(idle & brakeregenerate))", 
    "G(idle | brakeregenerate | assist)", 
    "G(assist -> !(X(brakeregenerate)))",
    "G(brakeregenerate -> !(X(assist)))",
    "G(brake -> F(brakeregenerate))",
    "G((brake & brakeregenerate)->(brakeregenerate U !brake))",
    "G(!brake -> F(assist))",
    "G((!brake & assist)->(assist U brake))"],
  "input_atomic_propositions": ["brake"],
  "output_atomic_propositions": ["assist", "brakeregenerate", "idle"],
  "traces" : [],
  "target" : ""
}